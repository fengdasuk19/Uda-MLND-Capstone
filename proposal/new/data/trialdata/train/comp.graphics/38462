 from sloan cis uab edu kenneth sloan subject re removing distortion from bitmapped drawings organization cis university of alabama at birmingham lines one three five in article boebert sctc com earl boebert writes let s say you have a scanned image of a line drawing in this case a boat but it could be anything on the drawing you have a set of reference points whose true x y positions are known now you digitize the drawing manually in this case using yaron danon s excellent digitize program that is you use a program which converts cursor positions to x y and saves those values when you click the mouse upon digitizing you notice that the reference point values that come out of the digitizing process differ in small but significant ways from the known true values this is understandable because the scanned drawing is a reproduction of the original and there are successive sources of distortion such as differential expansion and contraction of paper errors introduced in the printing process scanner errors and what have you the errors are not uniform over the entire drawing so global adjustments such as stretching contracting uniformly over x or y or rotating the whole drawing are not satisfactory so the question is does any kind soul know of an algorithm for removing such distortion in particular if i have three sets of points reference x y the known true values distortedreference x y the same points with known errors distorteddata x y other points with unknown errors what function of reference and distorted could i apply to distorteddata to remove the errors i suspect the problem could be solved by treating the distorted reference points as resulting from the projection of a bumpy three d surface solving for the surface and then flattening it to remove the errors in the other data points it helps to have some idea of the source of the distortion or at least a reasonable model of the class of distortion below is a very short description of the process which we use if you have further questions feel free to poke me via e mail assume locally smooth distortion zero compute the delaunay triangulation of your x y points this defines the set of neighbors for each point if your data are not naturally convex you may have very long edges on the convex hull consider deleting these edges one now there are two goals a move the distorteddata x y to the reference x y b keep the length e as measured from the current x y s as close as possible to the digitizedlength e as measured using the digitized x y s two for every point compute a displacement based on a and b for example a for x y points for which you know the reference x y you can move alpha zero reference x y current x y this will slowly move the distortedreference x y towards the reference x y b for all other points examine the current length of each edge for each edge compute a displacement which would make that edge the correct length where correct is the digitizedlength take the vector sum of these edge displacements and move the point alpha one sumofedgedisplacements this will keep the triangulated mesh consistent with your digitized mesh three iterate two until you are happy for example no point moves very much alpha zero and alpha one need to be determined by experimentation consider how much you believe the reference x y i e do you absolutely insist on the final points exactly matching the references or do you want to balance some error in matching the reference against changes in length of the edges warning there are a couple of geometric invariants which must be observed essentially you can t allow the convex hull to change and you can t allow triangles to fold over neighboring triangles both of these can be handled either by special case checks on the motion of individual points or by periodically re triangulating the points using the current positions but still calculating digitizedlength from the original positions when we first did this the triangulation time was prohibitive so we only did it once if i were motivated to try and change code that has been working in production mode for five years i might go back and re triangulate on every iteration if you have more compute power than you know what to do with you might consider having every point interact with every other point but first read up on linear solutions to the n body problem there are lots of papers in the last one zero years of siggraph proceedings on springs constraints and energy calculations which are relevant the above method is described in more or less detail in inproceedings techreport article kenneth sloan computer and information sciences sloan cis uab edu university of alabama at birmingham two zero five nine three four two two one three one one five a campbell hall uab station two zero five nine three four five four seven three fax birmingham al three five two nine four one one seven zero