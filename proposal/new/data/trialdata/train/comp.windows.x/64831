 from chongo toad com landon c noll subject one zero th international obfuscated c code contest opening part two of two article i d toad three two one nine five expires seven may nine three zero zero zero zero zero zero gmt reply to chongo toad com uucp landon c noll distribution world organization nebula consultants in san francisco lines one three eight two enclosed are the rules guidelines and related information for the one zero th international obfuscated c code contest this is part two of a two part shar file enjoy chongo oo larry bassel bin sh this is part zero two of a multipart archive mkentry c echo x extracting mkentry c text sed s x mkentry c x mkentry c one two four three one nine three zero two two eight four nine x x copyright c landon curt noll larry bassel one nine nine three x all rights reserved permission for personal education or non profit use x is granted provided this this copyright and notice are included in its x entirety and remains unaltered all other uses must receive prior x permission in writing from both landon curt noll and larry bassel x x x mkentry make an international obfuscated c code contest entry x x usage x mkentry r remarks b build p prog c o ioccc entry x x r remarks file with remarks about the entry x b build file containing how prog c should be built x p prog c the obfuscated program source file x o ioccc entry ioccc entry output file x x compile by x cc mkentry c o mkentry x x x placed in the public domain by landon curt noll one nine nine two x x this software is provided as is and without any express or implied x warranties including without limitation the implied warranties of x merchantability and fitness for a particular purpose x x x warning x x this program attempts to implement the ioccc rules every attempt x has been made to make sure that this program produces an entry that x conforms to the contest rules in all cases where this program x differs from the contest rules the contest rules will be used be x sure to check with the contest rules before submitting an entry x x send questions or comments but not entries about the contest to x x hoptoad judges x judges toad com x the rules and the guidelines may and often do change from year to x year you should be sure you have the current rules and guidelines x prior to submitting entries to obtain all three of them send email x to the address above and use the subject send rules x x because contest rules change from year to year one should only use this x program for the year that it was intended be sure that the rule year x define below matches this current year x x x include x include x include x include x include x x logic x ifndef true x define true one x endif true x ifndef false x define false zero x endif false x define eof ok true x define eof not ok false x x global limits x define rule year one nine nine three note should match the current year x define start date one mar nine two zero zero zero utc first confirmation received x define max col seven nine max column a line should hit x define max build size two five six max how to build size x define max program size three two one seven max program source size x define max program size two one five three six max program source size not counting x whitespace and not followed by x whitespace or eof x define max title len one two max chars in the title x define max entry len one max length in the entry input line x define max entry eight max number of entries per person per year x define max file len one zero two four max filename length for a info file x x where to send entries x define entry addr one hoptoad obfuscate x define entry addr two obfuscate toad com x x uuencode process assumes ascii x define uuencode c encode str int c abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz x x global declarations xchar program our name xlong start time the startup time x x forward declarations xvoid parse args xvoid usage xfile open remark xfile open build xfile open program xfile open output xvoid output entry xvoid output remark xvoid output author xvoid output info xvoid output build xvoid output program xvoid output end xint get line xvoid output till dot xint col len xvoid check io xvoid uuencode x xmain argc argv x int argc arg count x char argv the args x x file remark null open remarks stream x file build null open build file stream x file prog null open program stream x file output null open output stream x char rname null file with remarks about the entry x char bname null file containing how prog c should be built x char pname null the obfuscated program source file x char oname null ioccc entry output file x struct tm tm startup time structure x x x check on the year x x start time time long zero x tm gmtime x if tm tm year rule year one nine zero zero x fprintf stderr x s warning this program applies to d which may differ from d n n x argv zero rule year one nine zero zero tm tm year x x x x parse the command line args x x parse args argc argv x x x open check the input and output files x x we open and truncate the output file first in case it is the same x as one of the input files x x output open output oname x remark open remark rname x build open build bname x prog open program pname x if output null remark null build null prog null x x x output each section x x output entry output oname x output remark output oname remark rname x output author output oname x output info output oname x output build output oname build bname x output program output oname prog pname x output end output oname x x x flush the output x x if fflush output eof x x x final words x x printf nyour entry can be found in s you should check this file n x oname x printf correct any problems and verify that the uudecode utility will n x printf correctly decode your build file and program n n x printf this program has been provided as a guide for submitters in n x printf cases where it conflicts with the rules the rules shall apply n x printf it is your responsibility to ensure that your entry conforms to n x printf the current rules n n x printf email your entries to n x printf t s n entry addr one x printf t s n n entry addr two x printf please use the following subject when you email your entry n x printf tioccc entry n n x all done x exit zero x x x x parse args parse the command line args x x given the command line args this function parses them and sets the x required name flags this function will return only if the command x line syntax is correct x xvoid xparse args argc argv rname bname pname oname x int argc arg count x char argv the args x char rname file with remarks about the entry x char bname file containing how prog c should be built x char pname the obfuscated program source file x char oname ioccc entry output file x x char optarg flag option operand x int flagname the name of the flag x int i x x x not everyone has getopt so we must parse args by hand x x program argv zero x for i one i argc else x x x save the flag s operand in the correct global variable x switch flagname x x x x verify that we have all of the required flags x x if rname null bname null pname null oname null x return x x x x usage print a usage message and exit x x this function does not return x xvoid xusage exitval x int exitval exit with this value x x x x open remark open check the remark file x x the remark file should be indented by four spaces and should not extend x beyond column max col these are not requirements so we only warn x x this function returns null on i o or format error x xfile xopen remark filename x char filename x x x x look at each line x x while fgets buf bufsiz stream null x x count long lines x if col len buf max col x x x watch for i o errors x check io stream filename eof ok x x note long lines if needed x if toolong zero x x note non indented lines if needed x if non indent zero x x return the open file x rewind stream x return stream x x x x open build open check the build file x x the how to build file must not be longer than max build size bytes x x this function returns null on i o or size error x xfile xopen build filename x char filename x x x x determine the size of the file x x if fstat fileno stream statbuf max build size x x return the open file x return stream x x x x open program open check the program source file x x the program source file must be max program size x x x count the non whitespace non followed by whitespace chars x x count zero x c zero x while c fgetc stream eof x case x peek at next char x c fgetc stream x if c eof x default x count x break x x x x x watch for i o errors x check io stream filename eof ok x x look at the special size x if count max program size two followed by whitespace n x program x fprintf stderr x s or eof must be the line is not ok x char skip input to skip x file date pipe pipe to a date command x time t epoch sec seconds since the epoch x char p x x x write the start of the section x x fprintf output entry n x check io output oname eof not ok x x x write the rule year x x fprintf output rule t d n rule year x check io output oname eof not ok x x determine if this is a fix x printf is this a fix update or resubmittion to a x printf previous entry enter y or n x while get line buf one one zero zero buf zero y buf zero n x if buf zero y else x x x write the title x x printf nyour title must match expression be a a za z zero nine character n x printf followed by zero to d more a za z zero nine characters n n x max title len one x printf it is suggested but not required that the title should n x printf incorporate your username in the n x printf case of multiple authors consider using parts of the usernames n x printf of the authors n n x printf enter your title x do x x verify the pattern not everyone has regexp so do it by hand x if isascii int title zero x isalnum int title zero title zero title zero else x x x while ok line zero x fprintf output title t s title x check io output oname eof not ok x x x write the entry number x x printf neach person may submit up to d entries per year n n x max entry x printf enter an entry number from zero to d inclusive max entry one x do x while skip n x x check if we have a number and if it is in range x if ret one entry max entry one x while ret one entry max entry one x fprintf output entry t d n entry x check io output oname eof not ok x x x write the submission date x x returns a newline x epoch sec time null x fprintf output date t s asctime gmtime x check io output oname eof not ok x x x write the os machine host information x x printf x nenter the machine s and os s under which your entry was tested n x output till dot output oname host x x x x output remark output the remark section x x read the needed information form stdin and write the entry section x xvoid xoutput remark output oname remark rname x file output entry s output file stream x char oname name of the output file x file remark stream to the file containing remark text x char rname name of the remark file x x check io remark rname eof ok x x be sure that the remark section ends with a newline x if bufstrlen buf one n x x x x output author output the author section x x read the needed information from stdin and write the author section x if multiple authors exist multiple author sections will be written x xvoid xoutput author output oname x file output entry s output file stream x char oname name of the output file x x char bufmax col one one i o buffer x int more auths true more authors to note x int auth cnt zero number of authors processed x x x prompt the user for the author section x x printf nenter information about each author if your entry is after n x printf s and before the contest deadline the judges n start date x printf will attempt to email back a confirmation to the first author n x x x place author information for each author in an individual section x x do x x write the start of the section x fprintf output author n x check io output oname eof not ok x x write the author x printf nauthor d name auth cnt x while get line buf max col one max col nine infoname uuname x x x attempt to open the info file x infile fopen infoname r x if infile null x x x write the start of the section x x fprintf output info n x check io output oname eof not ok x x uuencode the info file x uuencode output oname infile infoname uuinfo mode uuname x x printf ndo you have another info file to include enter y or n x while get line yorn one one zero disable check x x x look for the newline x length strlen buf x if buflength one n while eatchar eof x check io stdin stdin eof not ok x x report the situation x return zero x x x watch for long lines if needed x if maxcol zero length maxcol col len buf maxcol x x return length x return length x x x x output till dot output a set of lines until by itself is read x x this routine will read a set of lines until but not including x a single line with is read the format of the output is x x leader tfirst line x tnext line x tnext line x x x this routine will not return if i o error or eof x xvoid xoutput till dot output oname leader x file output entry s output file stream x char oname name of the output file x char leader the lead text for the first line x x char bufbufsiz one input buffer x int count lines read x int done false true finished reading input x x instruct the user on how to input x printf nto end input enter a line with a single period n x x read lines until or eof x count zero x while done x issue the prompt x printf s t count zero leader x fflush stdout x x get the line x if get line buf bufsiz max col nine zero leader buf x check io output oname eof not ok x x x x if no lines read at least output something x if count zero x x x the first character is the length character x x fputc uuencode read len output x check io output oname eof not ok x x x we will convert two four bits at a time thus we will convert x three sets of eight bits into four sets of uuencoded six bits x x for p buf read len zero read len three p three x x bits zero to five x val p zero two x fputc uuencode val output x check io output oname eof not ok x x bits six to one one x val p zero four x fputc uuencode val output x check io output oname eof not ok x x bits one two to one seven x val p one six x fputc uuencode val output x check io output oname eof not ok x x bits one eight to two three x val p two x fputc uuencode val output x check io output oname eof not ok x x x end of uuencode len line x fputc n output x check io output oname eof not ok x x x clear out the input buffer don t depend on bzero or memset x x for p buf p p x x x check the last read on the input file x check io infile iname eof ok x x write end of uuencode file x fprintf output c nend n uuencode filler x check io output oname eof not ok x shar eof chmod zero four four four mkentry c echo restore of mkentry c failed set wc c mkentry c wc c one if test wc c three three nine six one then echo original size three three nine six one current size wc c fi obfuscate info echo x extracting obfuscate info text sed s x obfuscate info x x judges toad com or hoptoad judges x x previous contest winners are available via anonymous ftp from x ftp uu net under the directory pub ioccc x x x x zero th international obfuscated perl contest x by landon noll wc c one if test wc c six two five seven then echo original size six two five seven current size wc c fi exit zero sunnyvale residents vote landon noll for sunnyvale city council seat one