 from c four four five five eight five mizzou one missouri edu john kelsey subject one time pad authentication nntp posting host mizzou one missouri edu organization university of missouri lines five one i can think of a couple of ways of guaranteeing authenticity in a one time pad encrytped scheme though i m not sure how to prove that what kind of authenicity they provide an obvious first attempt might be to prepend a truly random unpredictable for eve block to the message and then calculate a crc which included the random starting block and all of the message this could be encrypted after the message the problem is i m not sure it s impossible to come up with a message that will hash to the same crc regardless of the random starting block it intuitively seems like it ought to be hard but i m not that sure clearly a crypto strength hash like md five or the sha would be stronger but again i m not sure i m comfortable claiming that it s unbreakable a scheme to use up some of the pad bits to decide how many bits of zero s to include in the plaintext stream before going on wouldn t be too bad either at the cost of increasing the speed with which you use up your pad this could be used to give you arbitrarily low probability that your opponent could spoof a valid looking message since any deciphered plaintext in a spot that should be carrying zero s will show that something funny s going on if for each message bit m i we used up one random bit r i to decide whether to insert a zero into the plaintext stream we d get a total pad use of two five times the message length we d expand the message size by about half each zero that should appear in the plaintext stream that doesn t is a guess for our would be spoofer at each bit she has to guess i m trying to see how to quantify her chances of making it all the way through the spoofed message but it gets a little complicated because she can get un synched and still happen to have a zero in that place in the spoofed message now i can see a simple way of doing this that s got to be as secure as a one time pad at a cost of using four times the message length in pad bits for each message bit m i use one random bit r i and xor them together to get x i now encrypt the three bits with the one time pad the enemy has no way of guessing what r i is so he she can t guess what x i is either any change she makes in the ciphertext stream will have to involve a guess of what r i was is there any way to do this without using so many pad bits spoofing the message is equivalent to correctly guessing as many random bits as there are bits in the message clearly this makes spoofing messages just as hard if you know the whole message text as if you know none of it in fact it looks to me like this makes it just as hard to generate a spoofed message with the ciphertext as without it but i m not entirely sure about that is there an easier way of doing this that s provably as secure as the one time pad john kelsey