 from nmm one cus cam ac uk nick maclaren subject re blinking cursor in xterm nntp posting host bootes cus cam ac uk organization u of cambridge england lines three nine in article barmar think com barry margolin writes in article mark taylor uucp mark a davis writes you are stuck in a distributed system feedback loop what if you are on an xterminal or running xterm over the net to another machine that is when the load problems occur if you had a machine with two zero xterminals attached and they all had blinking cursors in xterm s this could represent a considerable ethernet bandwidth waste ethernet certainly has enough bandwidth for a few blinking cursors my lisp machine blinks the cursor twice a second and updates the time in the status line every second this uses under one k bytes second or about one of the bandwidth of ethernet a hundred of them on a single ethernet might be a problem but a couple dozen should be fine bandwidth is unlikely to be the problem except over a wet string network one of major flaws of x is the horrendous number of transactions and hence process switches that it forces upon a host actual measurements hourly average are five per second per logged in user which can lead to two zero five zero or more process switches depending on whether each event is filtered by the window manager as well as the applications and how many processes are needed for each character while a blinking cursor needs only the application and the networking process and does not add any transactions it will add something like one zero process switches per second per user this is a significant increase in overhead especially as the application may have quite a large working set if you want a rapidly blinking cursor there could be as many as five zero if you want to go there i wouldn t start from here nick maclaren university of cambridge computer laboratory new museums site pembroke street cambridge cb two three qg england email nmm one cus cam ac uk tel four four two two three three three four seven six one fax four four two two three three three four six seven nine